Can we make the page redirect you to app.html the moment you finish registering or logging in? 
and when you write in hatake.eu and if your logged in automatically transfer you to app.html 

and also, please take the gallery photo modal from the original code and merge it with the new code:
<!DOCTYPE html>

<html class="dark" lang="en">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<title>HatakeSocial - Ultimate TCG Social Platform | Trading Cards</title>
<meta content="Join the ultimate TCG social platform for Magic, Pokemon, &amp; Yu-Gi-Oh players. Share decks, find tournaments, and connect with a global trading card game community." name="description"/>
<meta content="TCG social platform, trading card game community, TCG deck builder, Pokemon TCG community, Magic the Gathering social, TCG tournament finder, TCG collection tracker" name="keywords"/>
<meta content="HatakeSocial - The Ultimate TCG Social Platform" property="og:title"/>
<meta content="The social platform every TCG player needs to build decks, find tournaments, and connect with players worldwide." property="og:description"/>
<meta content="website" property="og:type"/>
<meta content="https://www.hatake.eu" property="og:url"/>
<meta content="https://i.imgur.com/B06rBhI.png" property="og:image"/>
<script src="https://cdn.tailwindcss.com"></script>
<link href="https://fonts.googleapis.com" rel="preconnect"/>
<link crossorigin="" href="https://fonts.gstatic.com" rel="preconnect"/>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&amp;display=swap" rel="stylesheet"/>
<script src="https://unpkg.com/lucide@latest"></script>
<style>
        :root {
            --background-dark: #111827;
            --text-light: #d1d5db;
            --text-lighter: #9ca3af;
            --accent-indigo: #4f46e5;
            --accent-pink: #ec4899;
        }
        html { scroll-behavior: smooth; }
        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--background-dark);
            color: var(--text-light);
        }
        .group:hover .group-hover\:block {
            display: block;
        }
        .gradient-text {
            background: linear-gradient(to right, var(--accent-indigo), var(--accent-pink));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        .modal-backdrop { transition: opacity 0.3s ease; }
        .modal-content { transition: transform 0.3s ease, opacity 0.3s ease; }
        .gallery-main-image {
            max-width: 80vw;
            max-height: 70vh;
            object-fit: contain;
        }
        .gallery-arrow {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            padding: 1rem;
            color: white;
            background-color: rgba(0,0,0,0.5);
            border-radius: 50%;
            user-select: none;
            z-index: 10;
        }
        .gallery-arrow:hover { background-color: rgba(0,0,0,0.8); }
        .gallery-arrow.left { left: 1rem; }
        .gallery-arrow.right { right: 1rem; }
        #gallery-thumbnails {
            display: flex;
            overflow-x: auto;
            gap: 0.5rem;
            padding: 0.75rem;
            width: 100%;
            max-width: 80vw;
            scrollbar-width: thin;
            scrollbar-color: #4f46e5 #1f2937;
        }
        .gallery-thumbnail {
            width: 80px;
            height: 80px;
            object-fit: cover;
            cursor: pointer;
            border-radius: 0.375rem;
            border: 2px solid transparent;
            opacity: 0.6;
            transition: opacity 0.2s ease, border-color 0.2s ease;
            flex-shrink: 0;
        }
        .gallery-thumbnail:hover {
            opacity: 1;
        }
        .gallery-thumbnail.active {
            opacity: 1;
            border-color: #4f46e5;
        }
    </style>
</head>
<body class="antialiased">
<header class="bg-gray-900/80 backdrop-blur-sm fixed top-0 left-0 right-0 z-50 border-b border-gray-800">
<nav class="container mx-auto px-6 py-3 flex justify-between items-center">
<a class="flex items-center space-x-3" href="/">
<img alt="HatakeSocial Logo" class="h-20 w-auto" src="https://i.imgur.com/B06rBhI.png"/>
</a>
<div class="hidden md:flex items-center space-x-8">
<div class="group relative py-3 -my-3">
<button class="text-gray-300 hover:text-white transition-colors">Features</button>
<div class="absolute hidden group-hover:block bg-gray-800 rounded-md shadow-lg mt-2 py-2 w-48 border border-gray-700">
<a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-feed">Social Feed</a>
<a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-deckbuilder">Deck Builder</a>
<a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-collection">Collection Tracker</a>
<a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-marketplace">Marketplace</a>
<a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-events">Event Finder</a>
</div>
</div>
<a class="text-gray-300 hover:text-white transition-colors" href="#community">Community</a>
<div class="group relative py-3 -my-3">
<button class="text-gray-300 hover:text-white transition-colors">Content</button>
<div class="absolute hidden group-hover:block bg-gray-800 rounded-md shadow-lg mt-2 py-2 w-48 border border-gray-700">
<a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="articles.html?type=tcg">TCG Articles</a>
<a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="articles.html?type=blog">Hatake Blog</a>
</div>
</div>
</div>
<div class="flex items-center space-x-4">
<button class="text-gray-300 hover:text-white transition-colors" id="login-btn-nav">Log In</button>
<button class="bg-indigo-600 hover:bg-indigo-700 text-white font-semibold px-5 py-2 rounded-lg transition-colors" id="register-btn-nav">Sign Up Free</button>
</div>
</nav>
</header>
<main>
<section class="pt-32 pb-20 bg-gray-900">
<div class="container mx-auto px-6 text-center">
<h1 class="text-4xl md:text-6xl font-extrabold text-white leading-tight mb-4">
                    HatakeSocial
                    <span class="block text-3xl md:text-5xl gradient-text mt-2">The Ultimate TCG Social Platform</span>
</h1>
<p class="text-lg md:text-xl text-gray-400 max-w-3xl mx-auto mb-8">
                    Built by players, for players. The premier social hub for Trading Card Game enthusiasts. Connect, build, trade, and compete with a global community of Magic, Pokémon, and Yu-Gi-Oh! fans. Your TCG journey starts here.
                </p>
<div class="flex flex-col items-center justify-center mb-8">
<img alt="HatakeSocial Logo" class="h-80 w-auto mb-3" src="https://i.imgur.com/B06rBhI.png"/>
<p class="text-sm text-gray-500 italic">Our logo is created by Richard Moreau</p>
</div>
<button class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold text-lg px-8 py-4 rounded-lg transition-transform transform hover:scale-105 inline-block" id="register-btn-hero">
                    Join the Community
                </button>
</div>
</section>
<section class="py-24 space-y-20">
<div class="container mx-auto px-6 grid md:grid-cols-2 gap-12 items-center" id="feature-feed">
<div class="md:pr-8">
<h2 class="text-3xl font-bold text-white mb-4">The Heart of the Community: Your Social Feed</h2>
<p class="text-gray-400 text-lg leading-relaxed mb-6">Dive into a dynamic feed buzzing with the latest from the TCG world. Share your latest pack openings, showcase your prized cards, and discuss metagame shifts with friends and followers. Our feed is your central hub for news, community content, and strategy discussions, tailored to the games you love.</p>
<a class="text-indigo-400 font-semibold hover:text-indigo-300" href="#feature-deckbuilder">Explore the Deck Builder →</a>
</div>
<div class="rounded-lg overflow-hidden shadow-2xl">
<img alt="Screenshot of the HatakeSocial social feed in action." class="w-full h-full object-cover" src="https://i.imgur.com/tvJEQYU.png"/>
</div>
</div>
<div class="container mx-auto px-6 grid md:grid-cols-2 gap-12 items-center" id="feature-deckbuilder">
<div class="rounded-lg overflow-hidden shadow-2xl md:order-last">
<img alt="Screenshot of the intuitive and powerful deck builder interface." class="w-full h-full object-cover" src="https://i.imgur.com/SLaX140.png"/>
</div>
<div class="md:pl-8">
<h2 class="text-3xl font-bold text-white mb-4">Advanced Deck Builder</h2>
<p class="text-gray-400 text-lg leading-relaxed mb-6">Unleash your creativity with our state-of-the-art deck building tool. Access comprehensive, up-to-date card databases for popular TCGs. Build and test your creations with an intuitive interface, get detailed analytics on your mana curve and card types, and share your masterpiece with the community or import popular meta decks with a single click.</p>
<a class="text-indigo-400 font-semibold hover:text-indigo-300" href="#feature-collection">Track Your Collection →</a>
</div>
</div>
<div class="container mx-auto px-6 grid md:grid-cols-2 gap-12 items-center" id="feature-collection">
<div class="md:pr-8">
<h2 class="text-3xl font-bold text-white mb-4">Your Collection, Digitized</h2>
<p class="text-gray-400 text-lg leading-relaxed mb-6">Digitize your physical collection with our powerful tracking tool. Easily add cards, monitor the value of your entire portfolio with real-time market data, and create detailed wantlists. Our collection tracker makes managing your assets and preparing for trades simpler and more organized than ever before.</p>
<a class="text-indigo-400 font-semibold hover:text-indigo-300" href="#feature-marketplace">Visit the Marketplace →</a>
</div>
<div class="rounded-lg overflow-hidden shadow-2xl">
<img alt="Screenshot of a user's card collection page with value tracking." class="w-full h-full object-cover" src="https://i.imgur.com/1ehyX2h.png"/>
</div>
</div>
<div class="container mx-auto px-6 grid md:grid-cols-2 gap-12 items-center" id="feature-marketplace">
<div class="rounded-lg overflow-hidden shadow-2xl md:order-last">
<img alt="Screenshot of the secure trading and marketplace interface." class="w-full h-full object-cover" src="https://i.imgur.com/QyFZZiJ.png"/>
</div>
<div class="md:pl-8">
<h2 class="text-3xl font-bold text-white mb-4">Marketplace &amp; Secure Trading</h2>
<p class="text-gray-400 text-lg leading-relaxed mb-6">Connect with players to buy, sell, and trade with confidence. Our integrated marketplace allows you to list singles or entire decks. The secure trading system, complete with user reviews and an escrow-like feature, ensures your valuable cards are protected throughout every transaction, fostering a safe and trustworthy community market.</p>
<a class="text-indigo-400 font-semibold hover:text-indigo-300" href="#feature-events">Find an Event →</a>
</div>
</div>
<div class="container mx-auto px-6 grid md:grid-cols-2 gap-12 items-center" id="feature-events">
<div class="md:pr-8">
<h2 class="text-3xl font-bold text-white mb-4">Find Your Next Tournament</h2>
<p class="text-gray-400 text-lg leading-relaxed mb-6">Ready to test your skills? Our tournament finder helps you discover local and online events. Filter by game, format, and location to find your next competition. From Friday Night Magic at your local game store to large-scale online championships, you'll never miss a chance to compete, win prizes, and make a name for yourself.</p>
<a class="text-indigo-400 font-semibold hover:text-indigo-300" href="#community">Join the Community →</a>
</div>
<div class="rounded-lg overflow-hidden shadow-2xl">
<img alt="Screenshot of the event finder showing local tournaments on a map." class="w-full h-full object-cover" src="https://placehold.co/600x400/1f2937/4f46e5?text=Event+Finder+Map"/>
</div>
</div>
</section>
<section class="py-20 bg-gray-900">
<div class="container mx-auto px-6 text-center">
<h2 class="text-3xl md:text-4xl font-bold text-white">Explore Our Merchandise</h2>
<p class="text-lg text-gray-400 max-w-2xl mx-auto mt-4 mb-8">
                    Click here to view photos of our own merchandise brand, brought to you by top engineers of the TCG industry.
                </p>
<button class="bg-pink-600 hover:bg-pink-700 text-white font-bold text-lg px-8 py-4 rounded-lg transition-transform transform hover:scale-105 inline-block" id="open-gallery-btn">
                    View Photo Gallery
                </button>
</div>
</section>
<section class="py-20 bg-gray-900/50" id="community">
<div class="container mx-auto px-6 text-center">
<h2 class="text-3xl md:text-4xl font-bold text-white">Ready to Join the Global TCG Community?</h2>
<p class="text-lg text-gray-400 max-w-2xl mx-auto mt-4 mb-8">
                     Your next favorite deck, your next rival, and your next tournament win are all waiting. Sign up for free and become part of the ultimate TCG social platform today.
                 </p>
<button class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold text-lg px-8 py-4 rounded-lg transition-transform transform hover:scale-105 inline-block" id="register-btn-cta">
                    Create Your Free Account
                </button>
</div>
</section>
</main>
<footer class="bg-gray-900 border-t border-gray-800">
<div class="container mx-auto px-6 py-8 text-center text-gray-400">
<p>© 2025 HatakeSocial. All rights reserved.</p>
<div class="mt-4 space-x-6">
<a class="hover:text-white transition-colors" href="about.html">About</a>
<a class="hover:text-white transition-colors" href="contact.html">Contact</a>
<a class="hover:text-white transition-colors" href="privacy.html">Privacy Policy</a>
<a class="hover:text-white transition-colors" href="terms.html">Terms of Service</a>
</div>
</div>
</footer>
<div class="fixed inset-0 z-50 flex items-center justify-center hidden" id="login-modal">
<div class="absolute inset-0 bg-black/70 modal-backdrop"></div>
<div class="bg-gray-800 rounded-lg shadow-xl p-8 w-full max-w-md mx-4 relative modal-content opacity-0 transform -translate-y-10">
<button class="absolute top-4 right-4 text-gray-500 hover:text-white" id="close-login-modal">
<i data-lucide="x"></i>
</button>
<h2 class="text-2xl font-bold text-white text-center mb-6">Welcome Back</h2>
<form id="login-form">
<div class="mb-4">
<label class="block text-gray-400 mb-2" for="login-email">Email</label>
<input class="w-full bg-gray-700 border border-gray-600 rounded-md py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-indigo-500" id="login-email" required="" type="email"/>
</div>
<div class="mb-6">
<label class="block text-gray-400 mb-2" for="login-password">Password</label>
<input class="w-full bg-gray-700 border border-gray-600 rounded-md py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-indigo-500" id="login-password" required="" type="password"/>
</div>
<button class="w-full bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-3 rounded-md transition-colors" type="submit">Log In</button>
<div class="text-red-400 text-sm mt-4 text-center" id="login-error"></div>
</form>
<div class="my-6 flex items-center">
<hr class="w-full border-gray-600"/><span class="px-3 text-gray-500 text-sm">OR</span><hr class="w-full border-gray-600"/>
</div>
<button class="w-full bg-gray-700 hover:bg-gray-600 text-white font-semibold py-3 rounded-md transition-colors flex items-center justify-center" id="google-signin-btn-login">
<svg class="w-5 h-5 mr-2" viewbox="0 0 48 48"><path d="M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z" fill="#EA4335"></path><path d="M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z" fill="#4285F4"></path><path d="M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z" fill="#FBBC05"></path><path d="M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z" fill="#34A853"></path><path d="M0 0h48v48H0z" fill="none"></path></svg>
                Continue with Google
            </button>
<p class="text-center text-gray-400 text-sm mt-6">
                Don't have an account? <button class="text-indigo-400 hover:underline font-semibold" id="switch-to-register">Sign Up</button>
</p>
</div>
</div>
<div class="fixed inset-0 z-50 flex items-center justify-center hidden" id="register-modal">
<div class="absolute inset-0 bg-black/70 modal-backdrop"></div>
<div class="bg-gray-800 rounded-lg shadow-xl p-8 w-full max-w-md mx-4 relative modal-content opacity-0 transform -translate-y-10">
<button class="absolute top-4 right-4 text-gray-500 hover:text-white" id="close-register-modal">
<i data-lucide="x"></i>
</button>
<h2 class="text-2xl font-bold text-white text-center mb-6">Create Your Account</h2>
<form id="register-form">
<div class="mb-4">
<label class="block text-gray-400 mb-2" for="register-email">Email</label>
<input class="w-full bg-gray-700 border border-gray-600 rounded-md py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-indigo-500" id="register-email" required="" type="email"/>
</div>
<div class="mb-6">
<label class="block text-gray-400 mb-2" for="register-password">Password</label>
<input class="w-full bg-gray-700 border border-gray-600 rounded-md py-2 px-3 text-white focus:outline-none focus:ring-2 focus:ring-indigo-500" id="register-password" required="" type="password"/>
</div>
<button class="w-full bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-3 rounded-md transition-colors" type="submit">Create Account</button>
<div class="text-red-400 text-sm mt-4 text-center" id="register-error"></div>
</form>
<div class="my-6 flex items-center">
<hr class="w-full border-gray-600"/><span class="px-3 text-gray-500 text-sm">OR</span><hr class="w-full border-gray-600"/>
</div>
<button class="w-full bg-gray-700 hover:bg-gray-600 text-white font-semibold py-3 rounded-md transition-colors flex items-center justify-center" id="google-signin-btn-register">
<svg class="w-5 h-5 mr-2" viewbox="0 0 48 48"><path d="M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z" fill="#EA4335"></path><path d="M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z" fill="#4285F4"></path><path d="M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z" fill="#FBBC05"></path><path d="M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z" fill="#34A853"></path><path d="M0 0h48v48H0z" fill="none"></path></svg>
                Sign Up with Google
            </button>
<p class="text-center text-gray-400 text-sm mt-6">
                Already have an account? <button class="text-indigo-400 hover:underline font-semibold" id="switch-to-login">Log In</button>
</p>
</div>
</div>
<div class="fixed inset-0 z-[60] flex items-center justify-center hidden" id="gallery-modal">
<div class="absolute inset-0 bg-black/80 modal-backdrop" id="gallery-backdrop"></div>
<div class="relative flex flex-col items-center justify-center">
<button class="absolute -top-4 -right-4 text-white hover:text-gray-300 z-10" id="close-gallery-modal">
<i class="w-8 h-8" data-lucide="x-circle"></i>
</button>
<div class="relative mb-4">
<img alt="Product Gallery Image" class="gallery-main-image rounded-lg shadow-xl" id="gallery-image" src=""/>
<div class="gallery-arrow left" id="gallery-prev"><i class="w-8 h-8" data-lucide="chevron-left"></i></div>
<div class="gallery-arrow right" id="gallery-next"><i class="w-8 h-8" data-lucide="chevron-right"></i></div>
</div>
<div id="gallery-thumbnails"></div>
</div>
</div>
<script type="module">
       const firebaseConfig = {
  apiKey: "AIzaSyD2Z9tCmmgReMG77ywXukKC_YIXsbP3uoU",
  authDomain: "hatakesocial-88b5e.firebaseapp.com",
  projectId: "hatakesocial-88b5e",
  storageBucket: "hatakesocial-88b5e.firebasestorage.app",
  messagingSenderId: "1091697032506",
  appId: "1:1091697032506:web:6a7cf9f10bd12650b22403",
  measurementId: "G-EH0PS2Z84J"
};

        import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js";
        import { getFirestore, collection, getDocs } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";
        import { getAuth, GoogleAuthProvider, signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-auth.js";
        import { getAnalytics } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-analytics.js";

        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);
        const auth = getAuth(app);
        const analytics = getAnalytics(app);
        const provider = new GoogleAuthProvider();

        const galleryModal = document.getElementById('gallery-modal');
        const openGalleryBtn = document.getElementById('open-gallery-btn');
        const closeGalleryBtn = document.getElementById('close-gallery-modal');
        const galleryBackdrop = document.getElementById('gallery-backdrop');
        const galleryImage = document.getElementById('gallery-image');
        const prevBtn = document.getElementById('gallery-prev');
        const nextBtn = document.getElementById('gallery-next');
        const thumbnailsContainer = document.getElementById('gallery-thumbnails');

        let imageUrls = [];
        let currentIndex = 0;

        function populateThumbnails() {
            thumbnailsContainer.innerHTML = '';
            imageUrls.forEach((url, index) => {
                const thumb = document.createElement('img');
                thumb.src = url;
                thumb.classList.add('gallery-thumbnail');
                thumb.dataset.index = index;
                thumb.addEventListener('mouseover', () => showImage(index));
                thumbnailsContainer.appendChild(thumb);
            });
        }

        async function fetchProductImages() {
            if (imageUrls.length > 0) return;
            try {
                const productsSnapshot = await getDocs(collection(db, 'products'));
                let allUrls = [];
                productsSnapshot.forEach(doc => {
                    const product = doc.data();
                    if (product.galleryImageUrls && Array.isArray(product.galleryImageUrls)) {
                        allUrls = allUrls.concat(product.galleryImageUrls.filter(url => typeof url === 'string' && url.startsWith('http')));
                    }
                });
                imageUrls = [...new Set(allUrls)]; 
                populateThumbnails();
            } catch (error) {
                console.error("Error fetching product images:", error);
            }
        }

        function showImage(index) {
            if (imageUrls.length === 0) return;
            currentIndex = (index + imageUrls.length) % imageUrls.length;
            galleryImage.src = imageUrls[currentIndex];

            const thumbnails = thumbnailsContainer.querySelectorAll('.gallery-thumbnail');
            thumbnails.forEach((thumb, i) => {
                if (i === currentIndex) {
                    thumb.classList.add('active');
                } else {
                    thumb.classList.remove('active');
                }
            });
        }

        function openGalleryModal() {
            if (imageUrls.length === 0) {
                alert("No images available in the gallery yet.");
                return;
            }
            galleryModal.classList.remove('hidden');
            showImage(0);
            document.addEventListener('keydown', handleKeyPress);
        }
        
        function closeGalleryModal() {
            galleryModal.classList.add('hidden');
            document.removeEventListener('keydown', handleKeyPress);
        }

        function handleKeyPress(e) {
            if (e.key === 'ArrowRight') showImage(currentIndex + 1);
            else if (e.key === 'ArrowLeft') showImage(currentIndex - 1);
            else if (e.key === 'Escape') closeGalleryModal();
        }

        openGalleryBtn.addEventListener('click', async () => {
            await fetchProductImages();
            openGalleryModal();
        });
        
        closeGalleryBtn.addEventListener('click', closeGalleryModal);
        galleryBackdrop.addEventListener('click', closeGalleryModal);
        prevBtn.addEventListener('click', () => showImage(currentIndex - 1));
        nextBtn.addEventListener('click', () => showImage(currentIndex + 1));
        
        const loginModal = document.getElementById('login-modal');
        const registerModal = document.getElementById('register-modal');

        function openModal(modal) {
            modal.classList.remove('hidden');
            setTimeout(() => {
                modal.querySelector('.modal-backdrop').classList.remove('opacity-0');
                modal.querySelector('.modal-content').classList.remove('opacity-0', '-translate-y-10');
            }, 10);
        }

        function closeModal(modal) {
            modal.querySelector('.modal-backdrop').classList.add('opacity-0');
            modal.querySelector('.modal-content').classList.add('opacity-0', '-translate-y-10');
            setTimeout(() => modal.classList.add('hidden'), 300);
        }

        document.getElementById('login-btn-nav').addEventListener('click', () => openModal(loginModal));
        document.getElementById('register-btn-nav').addEventListener('click', () => openModal(registerModal));
        document.getElementById('register-btn-hero').addEventListener('click', () => openModal(registerModal));
        document.getElementById('register-btn-cta').addEventListener('click', () => openModal(registerModal));

        document.getElementById('close-login-modal').addEventListener('click', () => closeModal(loginModal));
        document.getElementById('close-register-modal').addEventListener('click', () => closeModal(registerModal));
        loginModal.querySelector('.modal-backdrop').addEventListener('click', () => closeModal(loginModal));
        registerModal.querySelector('.modal-backdrop').addEventListener('click', () => closeModal(registerModal));
        
        document.getElementById('switch-to-register').addEventListener('click', () => {
            closeModal(loginModal);
            openModal(registerModal);
        });
         document.getElementById('switch-to-login').addEventListener('click', () => {
            closeModal(registerModal);
            openModal(loginModal);
        });

        const loginForm = document.getElementById('login-form');
        const registerForm = document.getElementById('register-form');
        const loginError = document.getElementById('login-error');
        const registerError = document.getElementById('register-error');

        loginForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const email = loginForm['login-email'].value;
            const password = loginForm['login-password'].value;
            signInWithEmailAndPassword(auth, email, password)
                .then(() => { window.location.href = '/app.html'; })
                .catch((error) => { loginError.textContent = error.message; });
        });

        registerForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const email = registerForm['register-email'].value;
            const password = registerForm['register-password'].value;
            createUserWithEmailAndPassword(auth, email, password)
                .then(() => { window.location.href = '/app.html'; })
                .catch((error) => { registerError.textContent = error.message; });
        });

        function handleGoogleSignIn() {
            signInWithPopup(auth, provider)
                .then(() => { window.location.href = '/app.html'; })
                .catch((error) => {
                    if (!loginModal.classList.contains('hidden')) loginError.textContent = error.message;
                    else if (!registerModal.classList.contains('hidden')) registerError.textContent = error.message;
                });
        }

        document.getElementById('google-signin-btn-login').addEventListener('click', handleGoogleSignIn);
        document.getElementById('google-signin-btn-register').addEventListener('click', handleGoogleSignIn);
    </script>
<script>
        lucide.createIcons();
    </script>
<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-[1001]" id="new-conversation-modal">
<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md">
<h2 class="text-2xl font-bold mb-4">Start a new conversation</h2>
<input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600 mb-4" id="user-search-input" placeholder="Search for a user by handle..." type="text"/>
<div class="max-h-60 overflow-y-auto" id="user-search-results">
</div>
<button class="mt-4 w-full bg-gray-200 dark:bg-gray-700 py-2 rounded-md hover:bg-gray-300 dark:hover:bg-gray-600 close-modal-btn" id="close-modal-btn">
            Cancel
        </button>
</div>
</div>
<!-- Login Modal -->

<!-- Register Modal -->

<div class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50" id="loginModal">
<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-md p-6">
<div class="flex justify-between items-center">
<h2 class="text-xl font-bold">
                Login
            </h2>
<button class="text-gray-500 hover:text-gray-800 dark:hover:text-white text-2xl font-bold" id="closeLoginModal">
                ×
            </button>
</div>
<form class="mt-4 space-y-4" id="loginForm">
<input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="loginEmail" placeholder="Email" required="" type="email"/>
<input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="loginPassword" placeholder="Password" required="" type="password"/>
<p class="text-red-500 text-sm hidden" id="login-error-message">
</p>
<button class="w-full bg-blue-600 text-white font-semibold py-2 rounded-md hover:bg-blue-700" type="submit">
                Login
            </button>
<button class="w-full bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 font-semibold py-2 rounded-md border dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center justify-center" id="googleLoginButton" type="button">
<img alt="Google icon" class="w-5 h-5 mr-2" src="https://www.svgrepo.com/show/475656/google-color.svg"/>
                Sign in with Google
            </button>
</form>
</div>
</div><div class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50" id="registerModal">
<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-md p-6">
<div class="flex justify-between items-center">
<h2 class="text-xl font-bold">
                Register
            </h2>
<button class="text-gray-500 hover:text-gray-800 dark:hover:text-white text-2xl font-bold" id="closeRegisterModal">
                ×
            </button>
</div>
<form class="mt-4 space-y-4" id="registerForm">
<input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerEmail" placeholder="Email" required="" type="email"/>
<input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerPassword" placeholder="Password" required="" type="password"/>
<input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerCity" placeholder="City" type="text"/>
<input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerCountry" placeholder="Country" type="text"/>
<input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerFavoriteTcg" placeholder="Favorite TCG" type="text"/>
<p class="text-red-500 text-sm hidden" id="register-error-message">
</p>
<button class="w-full bg-blue-600 text-white font-semibold py-2 rounded-md hover:bg-blue-700" type="submit">
                Register
            </button>
<button class="w-full bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 font-semibold py-2 rounded-md border dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center justify-center" id="googleRegisterButton" type="button">
<img alt="Google icon" class="w-5 h-5 mr-2" src="https://www.svgrepo.com/show/475656/google-color.svg"/>
                Register with Google
            </button>
</form>
</div>
</div></body>
</html>
That is the old index.html
This is the new index.html:
<!DOCTYPE html>
<html class="dark" lang="en">
<head>
    <meta charset="utf-8"/>
    <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
    <title>HatakeSocial - Ultimate TCG Social Platform | Trading Cards</title>
    <meta content="Join the ultimate TCG social platform for Magic, Pokemon, & Yu-Gi-Oh players. Share decks, find tournaments, and connect with a global trading card game community." name="description"/>
    <meta content="TCG social platform, trading card game community, TCG deck builder, Pokemon TCG community, Magic the Gathering social, TCG tournament finder, TCG collection tracker" name="keywords"/>
    <meta content="HatakeSocial - The Ultimate TCG Social Platform" property="og:title"/>
    <meta content="The social platform every TCG player needs to build decks, find tournaments, and connect with players worldwide." property="og:description"/>
    <meta content="website" property="og:type"/>
    <meta content="https://www.hatake.eu" property="og:url"/>
    <meta content="https://i.imgur.com/B06rBhI.png" property="og:image"/>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet"/>
    <script src="https://unpkg.com/lucide@latest"></script>
    <link href="css/style.css" rel="stylesheet"/>
    <style>
        :root {
            --background-dark: #111827;
            --text-light: #d1d5db;
            --accent-indigo: #4f46e5;
            --accent-pink: #ec4899;
        }
        html { scroll-behavior: smooth; }
        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--background-dark);
            color: var(--text-light);
        }
        .group:hover .group-hover\:block { display: block; }
        .gradient-text {
            background: linear-gradient(to right, var(--accent-indigo), var(--accent-pink));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        .gallery-main-image { max-width: 80vw; max-height: 70vh; object-fit: contain; }
        .gallery-arrow { position: absolute; top: 50%; transform: translateY(-50%); cursor: pointer; padding: 1rem; color: white; background-color: rgba(0,0,0,0.5); border-radius: 50%; user-select: none; z-index: 10; }
        .gallery-arrow:hover { background-color: rgba(0,0,0,0.8); }
        .gallery-arrow.left { left: 1rem; }
        .gallery-arrow.right { right: 1rem; }
        #gallery-thumbnails { display: flex; overflow-x: auto; gap: 0.5rem; padding: 0.75rem; width: 100%; max-width: 80vw; scrollbar-width: thin; scrollbar-color: #4f46e5 #1f2937; }
        .gallery-thumbnail { width: 80px; height: 80px; object-fit: cover; cursor: pointer; border-radius: 0.375rem; border: 2px solid transparent; opacity: 0.6; transition: opacity 0.2s ease, border-color 0.2s ease; flex-shrink: 0; }
        .gallery-thumbnail:hover { opacity: 1; }
        .gallery-thumbnail.active { opacity: 1; border-color: #4f46e5; }
    </style>
</head>
<body class="antialiased bg-gray-900">
    <header class="bg-gray-900/80 backdrop-blur-sm fixed top-0 left-0 right-0 z-50 border-b border-gray-800">
        <nav class="container mx-auto px-6 py-3 flex justify-between items-center">
            <a class="flex items-center space-x-3" href="/">
                <img alt="HatakeSocial Logo" class="h-16 w-auto" src="https://i.imgur.com/B06rBhI.png"/>
            </a>
             <div class="hidden md:flex items-center space-x-8">
                <div class="group relative py-3 -my-3">
                    <button class="text-gray-300 hover:text-white transition-colors">Features</button>
                    <div class="absolute hidden group-hover:block bg-gray-800 rounded-md shadow-lg mt-2 py-2 w-48 border border-gray-700">
                        <a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-feed">Social Feed</a>
                        <a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-deckbuilder">Deck Builder</a>
                        <a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-collection">Collection Tracker</a>
                        <a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-marketplace">Marketplace</a>
                        <a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="#feature-events">Event Finder</a>
                    </div>
                </div>
                <a class="text-gray-300 hover:text-white transition-colors" href="#community">Community</a>
                <div class="group relative py-3 -my-3">
                    <button class="text-gray-300 hover:text-white transition-colors">Content</button>
                    <div class="absolute hidden group-hover:block bg-gray-800 rounded-md shadow-lg mt-2 py-2 w-48 border border-gray-700">
                        <a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="articles.html?type=tcg">TCG Articles</a>
                        <a class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700 hover:text-white" href="articles.html?type=blog">Hatake Blog</a>
                    </div>
                </div>
            </div>
            <div class="flex items-center space-x-4" id="user-actions">
                 <!-- Auth buttons are dynamically inserted here by auth.js -->
            </div>
        </nav>
    </header>

    <main>
        <section class="pt-32 pb-20 bg-gray-900">
            <div class="container mx-auto px-6 text-center">
                <h1 class="text-4xl md:text-6xl font-extrabold text-white leading-tight mb-4">
                    HatakeSocial
                    <span class="block text-3xl md:text-5xl gradient-text mt-2">The Ultimate TCG Social Platform</span>
                </h1>
                <p class="text-lg md:text-xl text-gray-400 max-w-3xl mx-auto mb-8">
                    Built by players, for players. The premier social hub for Trading Card Game enthusiasts. Connect, build, trade, and compete with a global community of Magic, Pokémon, and Yu-Gi-Oh! fans. Your TCG journey starts here.
                </p>
                <div class="flex flex-col items-center justify-center mb-8">
                    <img alt="HatakeSocial Logo" class="h-80 w-auto mb-3" src="https://i.imgur.com/B06rBhI.png"/>
                    <p class="text-sm text-gray-500 italic">Our logo is created by Richard Moreau</p>
                </div>
                <button class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold text-lg px-8 py-4 rounded-lg transition-transform transform hover:scale-105 inline-block" id="register-btn-hero">
                    Join the Community
                </button>
            </div>
        </section>

        <section class="py-24 space-y-20">
             <div class="container mx-auto px-6 grid md:grid-cols-2 gap-12 items-center" id="feature-feed">
                <div class="md:pr-8">
                    <h2 class="text-3xl font-bold text-white mb-4">The Heart of the Community: Your Social Feed</h2>
                    <p class="text-gray-400 text-lg leading-relaxed mb-6">Dive into a dynamic feed buzzing with the latest from the TCG world. Share your latest pack openings, showcase your prized cards, and discuss metagame shifts with friends and followers. Our feed is your central hub for news, community content, and strategy discussions, tailored to the games you love.</p>
                    <a class="text-indigo-400 font-semibold hover:text-indigo-300" href="#feature-deckbuilder">Explore the Deck Builder →</a>
                </div>
                <div class="rounded-lg overflow-hidden shadow-2xl">
                    <img alt="Screenshot of the HatakeSocial social feed in action." class="w-full h-full object-cover" src="https://i.imgur.com/tvJEQYU.png"/>
                </div>
            </div>
            <div class="container mx-auto px-6 grid md:grid-cols-2 gap-12 items-center" id="feature-deckbuilder">
                <div class="rounded-lg overflow-hidden shadow-2xl md:order-last">
                    <img alt="Screenshot of the intuitive and powerful deck builder interface." class="w-full h-full object-cover" src="https://i.imgur.com/SLaX140.png"/>
                </div>
                <div class="md:pl-8">
                    <h2 class="text-3xl font-bold text-white mb-4">Advanced Deck Builder</h2>
                    <p class="text-gray-400 text-lg leading-relaxed mb-6">Unleash your creativity with our state-of-the-art deck building tool. Access comprehensive, up-to-date card databases for popular TCGs. Build and test your creations with an intuitive interface, get detailed analytics on your mana curve and card types, and share your masterpiece with the community or import popular meta decks with a single click.</p>
                    <a class="text-indigo-400 font-semibold hover:text-indigo-300" href="#feature-collection">Track Your Collection →</a>
                </div>
            </div>
        </section>

        <section class="py-20 bg-gray-900">
            <div class="container mx-auto px-6 text-center">
                <h2 class="text-3xl md:text-4xl font-bold text-white">Explore Our Merchandise</h2>
                <p class="text-lg text-gray-400 max-w-2xl mx-auto mt-4 mb-8">
                    Click here to view photos of our own merchandise brand, brought to you by top engineers of the TCG industry.
                </p>
                <button class="bg-pink-600 hover:bg-pink-700 text-white font-bold text-lg px-8 py-4 rounded-lg transition-transform transform hover:scale-105 inline-block" id="open-gallery-btn">
                    View Photo Gallery
                </button>
            </div>
        </section>

        <section class="py-20 bg-gray-900/50" id="community">
            <div class="container mx-auto px-6 text-center">
                <h2 class="text-3xl md:text-4xl font-bold text-white">Ready to Join the Global TCG Community?</h2>
                <p class="text-lg text-gray-400 max-w-2xl mx-auto mt-4 mb-8">
                     Your next favorite deck, your next rival, and your next tournament win are all waiting. Sign up for free and become part of the ultimate TCG social platform today.
                 </p>
                <button class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold text-lg px-8 py-4 rounded-lg transition-transform transform hover:scale-105 inline-block" id="register-btn-cta">
                    Create Your Free Account
                </button>
            </div>
        </section>
    </main>

    <footer class="bg-gray-900 border-t border-gray-800">
        <div class="container mx-auto px-6 py-8 text-center text-gray-400">
            <p>© 2025 HatakeSocial. All rights reserved.</p>
            <div class="mt-4 space-x-6">
                <a class="hover:text-white transition-colors" href="about.html">About</a>
                <a class="hover:text-white transition-colors" href="contact.html">Contact</a>
                <a class="hover:text-white transition-colors" href="privacy.html">Privacy Policy</a>
                <a class="hover:text-white transition-colors" href="terms.html">Terms of Service</a>
            </div>
        </div>
    </footer>

    <!-- Modals -->
    <div class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-[1001]" id="loginModal">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-md p-6">
            <div class="flex justify-between items-center">
                <h2 class="text-xl font-bold">Login</h2>
                <button class="text-gray-500 hover:text-gray-800 dark:hover:text-white text-2xl font-bold" id="closeLoginModal">×</button>
            </div>
            <form class="mt-4 space-y-4" id="loginForm">
                <input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="loginEmail" placeholder="Email" required type="email"/>
                <input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="loginPassword" placeholder="Password" required type="password"/>
                <p class="text-red-500 text-sm hidden" id="login-error-message"></p>
                <button class="w-full bg-blue-600 text-white font-semibold py-2 rounded-md hover:bg-blue-700" type="submit">Login</button>
                <button class="w-full bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 font-semibold py-2 rounded-md border dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center justify-center" id="googleLoginButton" type="button">
                    <img alt="Google icon" class="w-5 h-5 mr-2" src="https://www.svgrepo.com/show/475656/google-color.svg"/> Sign in with Google
                </button>
            </form>
        </div>
    </div>
    
    <div class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-[1001]" id="registerModal">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-md p-6">
            <div class="flex justify-between items-center">
                <h2 class="text-xl font-bold">Register</h2>
                <button class="text-gray-500 hover:text-gray-800 dark:hover:text-white text-2xl font-bold" id="closeRegisterModal">×</button>
            </div>
            <form class="mt-4 space-y-4" id="registerForm">
                <input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerEmail" placeholder="Email" required type="email"/>
                <input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerPassword" placeholder="Password" required type="password"/>
                <input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerCity" placeholder="City" type="text"/>
                <input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerCountry" placeholder="Country" type="text"/>
                <input class="w-full p-2 border rounded-md dark:bg-gray-700 dark:border-gray-600" id="registerFavoriteTcg" placeholder="Favorite TCG" type="text"/>
                <p class="text-red-500 text-sm hidden" id="register-error-message"></p>
                <button class="w-full bg-blue-600 text-white font-semibold py-2 rounded-md hover:bg-blue-700" type="submit">Register</button>
                <button class="w-full bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-200 font-semibold py-2 rounded-md border dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600 flex items-center justify-center" id="googleRegisterButton" type="button">
                    <img alt="Google icon" class="w-5 h-5 mr-2" src="https://www.svgrepo.com/show/475656/google-color.svg"/> Register with Google
                </button>
            </form>
        </div>
    </div>
    
    <div class="fixed inset-0 z-[1002] flex items-center justify-center hidden" id="gallery-modal">
        <div class="absolute inset-0 bg-black/80" id="gallery-backdrop"></div>
        <div class="relative flex flex-col items-center justify-center">
            <button class="absolute -top-12 -right-4 text-white hover:text-gray-300 z-10" id="close-gallery-modal">
                <i class="w-10 h-10" data-lucide="x-circle"></i>
            </button>
            <div class="relative mb-4">
                <img alt="Product Gallery Image" class="gallery-main-image rounded-lg shadow-xl" id="gallery-image" src=""/>
                <div class="gallery-arrow left" id="gallery-prev"><i class="w-8 h-8" data-lucide="chevron-left"></i></div>
                <div class="gallery-arrow right" id="gallery-next"><i class="w-8 h-8" data-lucide="chevron-right"></i></div>
            </div>
            <div id="gallery-thumbnails"></div>
        </div>
    </div>
    
    <!-- === CORRECT SCRIPT LOADING AREA === -->
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-firestore-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-storage-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-functions-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.0/firebase-analytics-compat.js"></script>
    <script src="/__/firebase/init.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/darkmode.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            lucide.createIcons();

            const registerBtnHero = document.getElementById('register-btn-hero');
            const registerBtnCta = document.getElementById('register-btn-cta');
            if (registerBtnHero) {
                registerBtnHero.addEventListener('click', () => openModal(document.getElementById('registerModal')));
            }
             if (registerBtnCta) {
                registerBtnCta.addEventListener('click', () => openModal(document.getElementById('registerModal')));
            }
            
            const galleryModal = document.getElementById('gallery-modal');
            const openGalleryBtn = document.getElementById('open-gallery-btn');
            const closeGalleryBtn = document.getElementById('close-gallery-modal');
            const galleryBackdrop = document.getElementById('gallery-backdrop');
            const galleryImage = document.getElementById('gallery-image');
            const prevBtn = document.getElementById('gallery-prev');
            const nextBtn = document.getElementById('gallery-next');
            const thumbnailsContainer = document.getElementById('gallery-thumbnails');

            let imageUrls = [];
            let currentIndex = 0;

            function populateThumbnails() {
                thumbnailsContainer.innerHTML = '';
                imageUrls.forEach((url, index) => {
                    const thumb = document.createElement('img');
                    thumb.src = url;
                    thumb.classList.add('gallery-thumbnail');
                    thumb.dataset.index = index;
                    thumb.addEventListener('click', () => showImage(index));
                    thumbnailsContainer.appendChild(thumb);
                });
            }

            async function fetchProductImages() {
                if (imageUrls.length > 0) return;
                try {
                    const productsSnapshot = await firebase.firestore().collection('products').get();
                    let allUrls = [];
                    productsSnapshot.forEach(doc => {
                        const product = doc.data();
                        if (product.galleryImageUrls && Array.isArray(product.galleryImageUrls)) {
                            allUrls = allUrls.concat(product.galleryImageUrls.filter(url => typeof url === 'string' && url.startsWith('http')));
                        }
                    });
                    imageUrls = [...new Set(allUrls)]; 
                    populateThumbnails();
                } catch (error) {
                    console.error("Error fetching product images:", error);
                }
            }

            function showImage(index) {
                if (imageUrls.length === 0) return;
                currentIndex = (index + imageUrls.length) % imageUrls.length;
                galleryImage.src = imageUrls[currentIndex];

                const thumbnails = thumbnailsContainer.querySelectorAll('.gallery-thumbnail');
                thumbnails.forEach((thumb, i) => {
                    thumb.classList.toggle('active', i === currentIndex);
                });
            }

            function openGalleryModal() {
                 if (imageUrls.length === 0) {
                    showToast("No merchandise images available yet.", "info");
                    return;
                }
                galleryModal.classList.remove('hidden');
                populateThumbnails();
                showImage(0);
                document.addEventListener('keydown', handleKeyPress);
            }
            
            function closeGalleryModal() {
                galleryModal.classList.add('hidden');
                document.removeEventListener('keydown', handleKeyPress);
            }

            function handleKeyPress(e) {
                if (e.key === 'ArrowRight') showImage(currentIndex + 1);
                else if (e.key === 'ArrowLeft') showImage(currentIndex - 1);
                else if (e.key === 'Escape') closeGalleryModal();
            }

            openGalleryBtn.addEventListener('click', async () => {
                await fetchProductImages();
                openGalleryModal();
            });
            
            closeGalleryBtn.addEventListener('click', closeGalleryModal);
            galleryBackdrop.addEventListener('click', closeGalleryModal);
            prevBtn.addEventListener('click', () => showImage(currentIndex - 1));
            nextBtn.addEventListener('click', () => showImage(currentIndex + 1));
        });
    </script>
</body>
</html>


This is the auth.js:
this is auth.js:
/**
* HatakeSocial - Merged Authentication & Global UI Script (v16 - Critical Auth Fixes)
*
* - FIX: Resolves a race condition where the app would try to load a user's profile before the backend function created it, causing a flashing/reload loop. Now uses a Firestore onSnapshot listener to wait for the document to exist.
* - FIX: Ensures the verification email is sent immediately and reliably upon registration.
* - FIX: Corrects the logic that was preventing the Terms of Service modal from appearing.
*/

// --- Global Toast Notification Function ---
const showToast = (message, type = 'info') => {
let container = document.getElementById('toast-container');
if (!container) {
const toastContainer = document.createElement('div');
toastContainer.id = 'toast-container';
toastContainer.className = 'fixed bottom-5 right-5 z-50';
document.body.appendChild(toastContainer);
container = toastContainer;
}
const toast = document.createElement('div');
toast.className = `toast toast-${type}`;
let iconClass = 'fa-info-circle';
if (type === 'success') iconClass = 'fa-check-circle';
if (type === 'error') iconClass = 'fa-exclamation-circle';

toast.innerHTML = `<i class="fas ${iconClass} toast-icon"></i> <p>${message}</p>`;
container.appendChild(toast);

setTimeout(() => {
toast.classList.add('show');
}, 100);

setTimeout(() => {
toast.classList.remove('show');
toast.addEventListener('transitionend', () => toast.remove());
}, 5000);
};

// --- Global Modal Helper Functions ---
window.openModal = (modal) => {
if (modal) {
modal.classList.remove('hidden');
modal.classList.add('flex');
const errorMsg = modal.querySelector('[id$="-error-message"]');
if (errorMsg) {
errorMsg.classList.add('hidden');
errorMsg.textContent = '';
}
}
};
window.closeModal = (modal) => {
if (modal) {
modal.classList.add('hidden');
modal.classList.remove('flex');
}
};


document.addEventListener('DOMContentLoaded', () => {
document.body.style.opacity = '0';

// --- Firebase Initialization ---
if (!firebase.apps.length) {
firebase.initializeApp();
}
if (typeof firebase.analytics === 'function') {
window.analytics = firebase.analytics();
}
window.auth = firebase.auth();
window.db = firebase.firestore();
window.storage = firebase.storage();
if (typeof firebase.functions === 'function') {
window.functions = firebase.functions();
} else {
window.functions = null;
console.warn('Firebase Functions library not loaded.');
}

const googleProvider = new firebase.auth.GoogleAuthProvider();
const loginModal = document.getElementById('loginModal');
const registerModal = document.getElementById('registerModal');

// --- MESSENGER WIDGET FIX ---
if (localStorage.getItem('messengerWidget-visible') === null) {
localStorage.setItem('messengerWidget-visible', 'false');
}

// --- Internationalization & Currency ---
window.HatakeSocial = {
conversionRates: { SEK: 1, USD: 0.095, EUR: 0.088 },
currentCurrency: localStorage.getItem('hatakeCurrency') || 'SEK',
currentUserData: null,
convertAndFormatPrice(amount, fromCurrency = 'SEK') {
const toCurrency = this.currentCurrency;
if (amount === undefined || amount === null || isNaN(amount)) {
return `0.00 ${toCurrency}`;
}
const fromRate = this.conversionRates[fromCurrency];
if (fromRate === undefined) return `N/A`;
const amountInSEK = amount / fromRate;
const toRate = this.conversionRates[toCurrency];
if (toRate === undefined) return `N/A`;
const convertedAmount = amountInSEK * toRate;
return `${convertedAmount.toFixed(2)} ${toCurrency}`;
}
};

const setupCurrencySelector = () => {
const container = document.getElementById('currency-selector-container');
if (!container) return;

container.innerHTML = `
<label for="currency-selector" class="text-sm text-gray-600 dark:text-gray-400">Currency</label>
<select id="currency-selector" class="text-sm rounded-md border-gray-300 dark:bg-gray-700 dark:border-gray-600 focus:ring-blue-500 focus:border-blue-500">
<option value="SEK">SEK</option>
<option value="USD">USD</option>
<option value="EUR">EUR</option>
</select>
`;
const selector = document.getElementById('currency-selector');
selector.value = window.HatakeSocial.currentCurrency;

selector.addEventListener('change', (e) => {
window.HatakeSocial.currentCurrency = e.target.value;
localStorage.setItem('hatakeCurrency', e.target.value);
window.location.reload();
});
};
const setupGlobalListeners = () => {
const headerSearchForm = document.querySelector('header form#header-search-form');
const googleLoginButton = document.getElementById('googleLoginButton');
const googleRegisterButton = document.getElementById('googleRegisterButton');
const mobileMenuButton = document.getElementById('mobile-menu-button');
const mobileMenu = document.getElementById('mobile-menu');
const registerForm = document.getElementById('registerForm');


document.getElementById('closeLoginModal')?.addEventListener('click', () => closeModal(loginModal));
document.getElementById('closeRegisterModal')?.addEventListener('click', () => closeModal(registerModal));

document.getElementById('loginForm')?.addEventListener('submit', (e) => {
e.preventDefault();
const email = document.getElementById('loginEmail').value;
const password = document.getElementById('loginPassword').value;
const errorMessageEl = document.getElementById('login-error-message');

auth.signInWithEmailAndPassword(email, password)
.catch(err => {
errorMessageEl.textContent = err.message;
errorMessageEl.classList.remove('hidden');
});
});

if(registerForm) {
registerForm.addEventListener('submit', (e) => {
e.preventDefault();
showTermsModal();
});
} else {
console.warn("Could not find the registration form to attach listener.");
}


const handleGoogleAuth = () => {
auth.signInWithPopup(googleProvider).then(result => {
// The onUserCreate cloud function will handle profile creation if it's a new user.
console.log('Google sign-in successful.');
}).catch(err => showToast(err.message, "error"));
};
if (googleLoginButton) googleLoginButton.addEventListener('click', handleGoogleAuth);
if (googleRegisterButton) googleRegisterButton.addEventListener('click', handleGoogleAuth);

if (headerSearchForm) {
headerSearchForm.addEventListener('submit', (e) => {
e.preventDefault();
const searchBar = document.getElementById('searchBar');
const query = searchBar.value.trim();
if (query) {
window.location.href = `search.html?query=${encodeURIComponent(query)}`;
}
});
}
const scrollToTopBtn = document.getElementById('scroll-to-top-btn');
if (scrollToTopBtn) {
window.addEventListener('scroll', () => {
if (window.pageYOffset > 200) {
scrollToTopBtn.classList.remove('hidden');
} else {
scrollToTopBtn.classList.add('hidden');
}
});

scrollToTopBtn.addEventListener('click', () => {
window.scrollTo({ top: 0, behavior: 'smooth' });
});
}

if (mobileMenuButton) {
mobileMenuButton.addEventListener('click', () => {
mobileMenu.classList.toggle('hidden');
});
}
};

let friendRequestHandshakeListener = null;
function listenForAcceptedRequests(user) {
if (friendRequestHandshakeListener) {
friendRequestHandshakeListener();
}

const sentRequestsRef = db.collection('friendRequests')
.where('senderId', '==', user.uid)
.where('status', '==', 'accepted');

friendRequestHandshakeListener = sentRequestsRef.onSnapshot(async (snapshot) => {
if (snapshot.empty) return;

const batch = db.batch();
const currentUserRef = db.collection('users').doc(user.uid);

for (const doc of snapshot.docs) {
const request = doc.data();
const newFriendId = request.receiverId;

batch.update(currentUserRef, { friends: firebase.firestore.FieldValue.arrayUnion(newFriendId) });
batch.delete(doc.ref);
const notificationData = {
message: `You are now friends with ${request.receiverName || 'a new user'}.`,
link: `/profile.html?uid=${newFriendId}`,
isRead: false,
timestamp: new Date()
};
const notificationRef = db.collection('users').doc(user.uid).collection('notifications').doc();
batch.set(notificationRef, notificationData);
}

try {
await batch.commit();
} catch (error) {
console.error("Error completing friend handshake:", error);
}
}, error => {
console.error("Error listening for accepted friend requests:", error);
});
}
function sanitizeHTML(str) {
const temp = document.createElement('div');
temp.textContent = str;
return temp.innerHTML;
}

let unsubscribeNotifications = null;
let verificationTimer = null;
auth.onAuthStateChanged(async (user) => {
if (verificationTimer) {
clearInterval(verificationTimer);
verificationTimer = null;
}

const mainSidebarNav = document.querySelector('#sidebar nav');
const existingAdminSidebarLink = document.getElementById('admin-sidebar-link');
if (existingAdminSidebarLink) {
existingAdminSidebarLink.remove();
}

if (user && !user.emailVerified) {
document.body.innerHTML = `
<div class="flex items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900">
<div class="p-8 bg-white dark:bg-gray-800 rounded-lg shadow-xl text-center max-w-lg mx-4">
<h1 class="text-2xl font-bold text-gray-800 dark:text-white mb-4">Please Verify Your Email</h1>
<p class="text-gray-600 dark:text-gray-400 mb-6">
A verification link has been sent to <strong>${user.email}</strong>. Please check your inbox (and spam folder) and click the link to activate your account.
</p>
<div class="space-x-4">
<button id="resend-verification-btn" class="px-5 py-2 bg-blue-600 text-white font-semibold rounded-full hover:bg-blue-700">Resend Email</button>
<button onclick="firebase.auth().signOut()" class="px-5 py-2 bg-gray-600 text-white font-semibold rounded-full hover:bg-gray-700">Logout</button>
</div>
</div>
</div>
`;
document.getElementById('resend-verification-btn').addEventListener('click', () => {
user.sendEmailVerification()
.then(() => showToast('A new verification email has been sent.', 'success'))
.catch(err => showToast('Error sending email: ' + err.message, 'error'));
});

// Automatically check for verification status
verificationTimer = setInterval(async () => {
await user.reload();
if (user.emailVerified) {
clearInterval(verificationTimer);
window.location.reload();
}
}, 5000); // Check every 5 seconds
document.body.style.opacity = '1';
return;
}
const userActions = document.getElementById('user-actions');
const authContainerSidebar = document.getElementById('auth-container-sidebar');
const mobileUserActions = document.getElementById('mobile-user-actions');
if (user) {
closeModal(loginModal);
closeModal(registerModal);
try {
// RACE CONDITION FIX: Use onSnapshot to wait for the user document
const userDocRef = db.collection('users').doc(user.uid);
let unsubscribeUserDoc = userDocRef.onSnapshot(async (doc) => {
if (doc.exists) {
if (unsubscribeUserDoc) unsubscribeUserDoc(); // Stop listening once we have the doc
const userData = doc.data();
window.HatakeSocial.currentUserData = userData;
const photoURL = userData.photoURL || 'https://i.imgur.com/B06rBhI.png';
const idTokenResult = await user.getIdTokenResult(true);
const isAdmin = idTokenResult.claims.admin === true;
handleAdminAccess(isAdmin);
if (isAdmin && mainSidebarNav) {
const adminLink = document.createElement('a');
adminLink.id = 'admin-sidebar-link';
adminLink.className = 'flex items-center px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-md font-bold';
adminLink.href = 'admin.html';
adminLink.innerHTML = `
<i class="fas fa-user-shield w-6 text-center"></i>
<span class="ml-3">Admin Panel</span>
`;
mainSidebarNav.appendChild(adminLink);
}


if (userActions) {
userActions.innerHTML = `
<div class="relative">
<button id="cart-btn" class="text-gray-600 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 text-xl">
<i class="fas fa-shopping-cart"></i>
<span id="cart-item-count" class="absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold rounded-full h-4 w-4 flex items-center justify-center hidden">0</span>
</button>
</div>
<div class="relative">
<button id="notification-bell-btn" class="text-gray-600 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 text-xl"><i class="fas fa-bell"></i><span id="notification-count" class="absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold rounded-full h-4 w-4 flex items-center justify-center hidden">0</span></button>
<div id="notification-dropdown" class="absolute right-0 mt-2 w-80 bg-white dark:bg-gray-800 border dark:border-gray-700 rounded-lg shadow-xl z-20 hidden">
<div class="p-3 font-bold border-b dark:border-gray-700">Notifications</div>
<div id="notification-list" class="max-h-96 overflow-y-auto"><p class="p-4 text-sm text-gray-500">No new notifications.</p></div>
<a href="notifications.html" class="block text-center p-2 text-sm text-blue-500 hover:bg-gray-100 dark:hover:bg-gray-700">View all</a>
</div>
</div>
<div class="relative">
<button id="profile-avatar-btn"><img src="${photoURL}" alt="User Avatar" class="w-10 h-10 rounded-full object-cover border-2 border-transparent hover:border-blue-500"></button>
<div id="profile-dropdown" class="absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 border dark:border-gray-700 rounded-lg shadow-xl z-20 hidden">
<a href="profile.html?uid=${user.uid}" class="block px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">My Profile</a>
<a href="settings.html" class="block px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">Settings</a>
${isAdmin ? `<a href="admin.html" class="block px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">Admin Panel</a>` : ''}
<hr class="border-gray-200 dark:border-gray-600">
<button id="logout-btn-dropdown" class="block w-full text-left px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700">Logout</button>
</div>
</div>`;
document.getElementById('cart-btn').addEventListener('click', () => openModal(document.getElementById('cartModal')));
document.getElementById('notification-bell-btn').addEventListener('click', (e) => { e.stopPropagation(); document.getElementById('profile-dropdown').classList.add('hidden'); document.getElementById('notification-dropdown').classList.toggle('hidden'); });
document.getElementById('profile-avatar-btn').addEventListener('click', (e) => { e.stopPropagation(); document.getElementById('notification-dropdown').classList.add('hidden'); document.getElementById('profile-dropdown').classList.toggle('hidden'); });
document.getElementById('logout-btn-dropdown').addEventListener('click', () => auth.signOut());
}

if (unsubscribeNotifications) unsubscribeNotifications();
unsubscribeNotifications = db.collection('users').doc(user.uid).collection('notifications').orderBy('timestamp', 'desc').onSnapshot(snapshot => {
const unreadCount = snapshot.docs.filter(doc => !doc.data().isRead).length;
const countEl = document.getElementById('notification-count');
const listEl = document.getElementById('notification-list');
if (countEl) { countEl.textContent = unreadCount; countEl.classList.toggle('hidden', unreadCount === 0); }
if (listEl) {
if (snapshot.empty) { listEl.innerHTML = '<p class="p-4 text-sm text-gray-500">No new notifications.</p>'; }
else {
listEl.innerHTML = '';
snapshot.docs.slice(0, 5).forEach(doc => {
const notif = doc.data();
const el = document.createElement('a');
el.href = notif.link || '#';
el.className = `flex items-start p-3 hover:bg-gray-100 dark:hover:bg-gray-700 ${!notif.isRead ? 'bg-blue-50 dark:bg-blue-900/50' : ''}`;
el.innerHTML = `<div class="flex-shrink-0 mr-3"><div class="w-3 h-3 rounded-full ${!notif.isRead ? 'bg-blue-500' : 'bg-transparent'} mt-1.5"></div></div><div><p class="text-sm text-gray-700 dark:text-gray-300">${sanitizeHTML(notif.message)}</p><p class="text-xs text-gray-500">${new Date(notif.timestamp?.toDate()).toLocaleString()}</p></div>`;
el.addEventListener('click', () => db.collection('users').doc(user.uid).collection('notifications').doc(doc.id).update({ isRead: true }));
listEl.appendChild(el);
});
}
}
}, err => console.error("Notification listener error:", err));

if (authContainerSidebar) {
authContainerSidebar.innerHTML = `<div class="flex items-center"><img src="${photoURL}" alt="User Avatar" class="w-10 h-10 rounded-full object-cover"><div class="ml-3"><p class="font-semibold text-gray-800 dark:text-white">${userData.displayName}</p><button id="logout-btn-sidebar" class="text-sm text-gray-500 hover:underline">Logout</button></div></div>`;
document.getElementById('logout-btn-sidebar').addEventListener('click', () => auth.signOut());
}

if (mobileUserActions) {
mobileUserActions.innerHTML = `<div class="flex items-center space-x-4 px-3 py-2"><img src="${photoURL}" alt="User Avatar" class="h-10 w-10 rounded-full border-2 border-blue-500 object-cover"><div><div class="font-medium text-base text-gray-800 dark:text-white">${userData.displayName}</div><div class="font-medium text-sm text-gray-500 dark:text-gray-400">${user.email}</div></div></div><div class="mt-3 space-y-1"><a href="profile.html" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700">Profile</a><a href="settings.html" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700">Settings</a><a href="#" id="mobileLogoutButton" class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700">Logout</a></div>`;
document.getElementById('mobileLogoutButton').addEventListener('click', (e) => { e.preventDefault(); auth.signOut(); });
}
listenForAcceptedRequests(user);

} else {
console.log("User document not found for uid:", user.uid, ". Waiting for it to be created by the backend function...");
// The onSnapshot listener will keep running until the document is created.
}
}, (error) => {
console.error("Error listening to user document:", error);
showToast("Could not load your profile data.", "error");
auth.signOut();
});

} catch (error) {
console.error("Error during authenticated state setup:", error);
showToast("Could not load your profile.", "error");
auth.signOut();
}
} else {
window.HatakeSocial.currentUserData = null;
if (friendRequestHandshakeListener) friendRequestHandshakeListener();
if (unsubscribeNotifications) unsubscribeNotifications();

handleAdminAccess(false);

const loginButtonsHTML = `
<div class="space-x-2">
<button id="header-login-btn" class="px-4 py-2 bg-blue-600 text-white font-semibold rounded-full hover:bg-blue-700">Login</button>
<button id="header-register-btn" class="px-4 py-2 bg-gray-600 text-white font-semibold rounded-full hover:bg-gray-700">Register</button>
</div>`;
if (userActions) {
userActions.innerHTML = loginButtonsHTML;
document.getElementById('header-login-btn').addEventListener('click', () => openModal(document.getElementById('loginModal')));
document.getElementById('header-register-btn').addEventListener('click', () => openModal(document.getElementById('registerModal')));
}
if (authContainerSidebar) {
authContainerSidebar.innerHTML = loginButtonsHTML;
document.getElementById('header-login-btn').addEventListener('click', () => openModal(document.getElementById('loginModal')));
document.getElementById('header-register-btn').addEventListener('click', () => openModal(document.getElementById('registerModal')));
}
if (mobileUserActions) {
mobileUserActions.innerHTML = `<div class="space-y-2"><button id="mobileLoginButton" class="w-full text-left block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700">Login</button><button id="mobileRegisterButton" class="w-full text-left block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700">Register</button></div>`;
document.getElementById('mobileLoginButton').addEventListener('click', () => openModal(document.getElementById('loginModal')));
document.getElementById('mobileRegisterButton').addEventListener('click', () => openModal(document.getElementById('registerModal')));
}
}
document.dispatchEvent(new CustomEvent('authReady', { detail: { user } }));
window.authReady = true;

document.body.style.transition = 'opacity 0.3s ease-in-out';
document.body.style.opacity = '1';
});
setupGlobalListeners();
setupCurrencySelector();

window.addEventListener('click', () => {
document.getElementById('profile-dropdown')?.classList.add('hidden');
document.getElementById('notification-dropdown')?.classList.add('hidden');
});
});


function handleAdminAccess(isAdmin) {
const currentPage = window.location.pathname.split('/').pop();
const adminPages = ['admin.html', 'create-article.html', 'edit-article.html'];

if (adminPages.includes(currentPage)) {
if (isAdmin) {
const displayStyle = document.body.classList.contains('flex') ? 'flex' : 'block';
document.body.style.display = displayStyle;
} else {
console.log('User is not an admin. Redirecting to home.');
window.location.href = 'index.html';
}
} else {
const displayStyle = document.body.classList.contains('flex') ? 'flex' : 'block';
document.body.style.display = displayStyle;
}

const writeArticleBtn = document.getElementById('write-new-article-btn');
if (writeArticleBtn) {
writeArticleBtn.classList.toggle('hidden', !isAdmin);
}
}

async function showTermsModal() {
const termsModal = document.createElement('div');
termsModal.id = 'terms-modal';
termsModal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1002]';
let termsContent = '';
let privacyContent = '';

try {
const termsResponse = await fetch('terms.html');
if(termsResponse.ok) {
termsContent = await termsResponse.text();
} else {
termsContent = '<p>Could not load Terms of Service.</p>';
}

const privacyResponse = await fetch('privacy.html');
if(privacyResponse.ok) {
privacyContent = await privacyResponse.text();
} else {
privacyContent = '<p>Could not load Privacy Policy.</p>';
}
} catch (error) {
console.error('Error fetching legal documents:', error);
termsContent = '<p>Error loading content. Please try again later.</p>';
}


termsModal.innerHTML = `
<div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-2xl flex flex-col" style="height: 90vh; max-height: 800px;">
<div class="flex justify-between items-center p-4 border-b dark:border-gray-700">
<h2 class="text-xl font-bold">Terms of Service and Privacy Policy</h2>
<button id="close-terms-modal" class="text-gray-500 hover:text-gray-800 dark:hover:text-white text-2xl font-bold">&times;</button>
</div>
<div id="terms-content" class="p-6 flex-grow overflow-y-auto">
${termsContent}
<hr class="my-8">
${privacyContent}
</div>
<div class="p-6 border-t dark:border-gray-700 bg-gray-50 dark:bg-gray-800/50">
<div class="flex items-center">
<input type="checkbox" id="terms-checkbox" disabled class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
<label for="terms-checkbox" class="ml-2 block text-sm text-gray-900 dark:text-gray-300">
I have read and agree to the Terms of Service and Privacy Policy.
</label>
</div>
<button id="final-register-btn" disabled class="w-full mt-4 bg-blue-600 text-white font-semibold py-3 rounded-lg hover:bg-blue-700 disabled:bg-gray-400">
Register
</button>
</div>
</div>
`;

document.body.appendChild(termsModal);

const termsContentEl = termsModal.querySelector('#terms-content');
const termsCheckbox = termsModal.querySelector('#terms-checkbox');
const finalRegisterBtn = termsModal.querySelector('#final-register-btn');

termsContentEl.addEventListener('scroll', () => {
if (termsContentEl.scrollTop + termsContentEl.clientHeight >= termsContentEl.scrollHeight - 10) {
termsCheckbox.disabled = false;
}
});

termsCheckbox.addEventListener('change', () => {
finalRegisterBtn.disabled = !termsCheckbox.checked;
});

termsModal.querySelector('#close-terms-modal').addEventListener('click', () => {
termsModal.remove();
});

finalRegisterBtn.addEventListener('click', async () => {
const email = document.getElementById('registerEmail').value;
const password = document.getElementById('registerPassword').value;
const errorMessageEl = document.getElementById('register-error-message');

try {
const userCredential = await auth.createUserWithEmailAndPassword(email, password);
// The onUserCreate cloud function now handles profile creation.
// We just need to send the verification email.
await userCredential.user.sendEmailVerification();
showToast("Registration successful! A verification link has been sent to your email.", "success");
termsModal.remove();
closeModal(document.getElementById('registerModal'));

} catch (err) {
if(errorMessageEl) {
errorMessageEl.textContent = err.message;
errorMessageEl.classList.remove('hidden');
} else {
showToast(err.message, "error");
}
termsModal.remove();
}
});
}
